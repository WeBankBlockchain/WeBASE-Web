export default {
    login: {
        user: "user",
        password: "password",
        verificationCode: "verificationCode",
        login: "login"
    },
    inputText: {
        user: "Please enter user",
        password: "Please enter password",
        verificationCode: "Please enter verificationCode",
        blockInput: "Please enter block hash or block height",
        contractSearch: "Please enter the contract name or address",
        transactionSearch: "Please enter a transaction hash or block height"
    },
    text: {
        reqOvertime: "request timeout",
        loginFail: "Landing failed",
        systemError: "system error",
        copy: "copy",
        arrow: "arrow",
        copyErrorMsg: "Key is empty, do not copy.",
        copySuccessMsg: "copy success",
        copyHash: "copy hash",
        total: "total",
        tiao: "",
        blockSearchMsg: "search block hash does not support fuzzy query",
        delete: "delete",
        update: "update",
        confirmDelete: "Are you sure to delete?",
        sure: "Ok",
        cancel: "Cancel",
        select: "Please select",
        tips: "tips",
        updateSuccessMsg: "update success",
        save: "save",
        compile: "compile",
        deploy: "deploy",
        send: "send",
        selectSuccess: "Query succeeded!",
        transactionSuccess: "Successful transaction!",
        transactionFail: "Transaction failed!",
        noData: "No data",
        input: "Please input",
        search: "search",
        example: "For example",
        implement: "implement",
        implementResult: "implement result",
        confirmSubmit: "Confirm to submit?",
        addSuccess: "added successfully"
    },
    rule: {
        textLong: "1 to 32 characters in length",
        passwordError: "Login password error",
        loginPasswordType: "Please input the password correctly",
        ipName: "Please enter IP name",
        ipRule: "IP does not comply with rules",
        portName: "Please enter the port name",
        portLong: "1 to 12 digits in length",
        portRule: "Port does not comply with rules",
        agencyName: "Please enter the agency name",
        agencyLong: "1 to 16 digits in length",
        agencyRule: "Please input Chinese, English and numbers for agency name",
        adminRule: "Please select administrator account",
        nodeType: "Please select a node type",
        contractName: "Please enter the contract name",
        contractLong: "1 to 32 characters in length",
        contractRule: "Contract name does not conform to the rules",
        folderName: "Please enter a folder name",
        folderLong: "1 to 12 characters in length",
        folderRule: "Folder name does not conform to the rules",
        selectAdmin: "Please select an administrator",
        sqlRule: "Please input sql",
        outUserAddress: "Please select an external account address",
        configName: "Please select a configuration name",
        configValue: "Please enter the configuration value",
        configValueNumber: "Configuration value must be a number",
        accountRule: "User name can only enter letters and numbers",
        passwordLong: "6 to 12 characters in length",
        passwordRule: "Composed of letters, numbers, and at least one uppercase letter and one lowercase letter"
    },
    head: {
        helpText: "Help document",
        group: "groups",
        changePassword: "change password",
        exit: "exit"
    },
    title: {
        dataOverview: "Data overview",
        blockTitle: "Block information",
        nodeTitle: "Node management",
        contractTitle: "Contract management",
        contractIDE: "Contract IDE",
        contractList: "Contract list",
        CNSmanager: "CNS query",
        CNSTips: "CNS query Description: the contract naming service CNS provides the record of the mapping relationship between the contract name and the contract address on the chain and the corresponding query function, so that the caller can call the contract on the chain by remembering the simple contract name.",
        CRUDTips: "Crud Description: CRUD (add, delete, modify and query) can create tables and perform add, delete, modify and query operations on tables. Tips: if deployment and table creation permissions are enabled, the operation of table creation requires deployment and table creation permissions. Table permissions are required for deleting and modifying tables.",
        PrivateKey: "Private key management",
        systemManager: "System management",
        permission: "Privilege management",
        permissionTips: "Description of management authority: authority control is based on the access mechanism of external account (tx.origin), which controls the authority of contract deployment, table creation, table writing (insertion, update and deletion), and table reading is not controlled by authority.",
        permissionHref: "Specific documents: [permission control]",
        configManager: "Configuration management",
        configManagerTips: "System Configuration Management Description: System configuration can configure system property values (currently supports the settings of tx_count_limit and tx_gas_limit properties).",
        certificate: "Certificate management",
        accountManagement: "Account management",
        transactionAudit: "Transaction audit",
        userTransaction: "User transaction",
        unusualUser: "Unusual user",
        unusualContract: "Unusual contract",
        transactionInfo: "Transaction Information",
        systemMonitor: "System monitoring",
        nodesMonitor: "Node monitoring",
        hostMonitor: "Host monitoring"
    },
    home: {
        nodes: "node number",
        contracts: "deployed contracts",
        blocks: "blocks",
        transactions: "transactions",
        nodeId: "nodeId",
        blockHeight: "blockHeight",
        pbftView: "pbftView",
        status: "status",
        block: "block",
        transaction: "transaction",
        tranfer: "transfer",
        more: "more",
        run: "run",
        unusual: "unusual",
        chartTitle: "Key monitoring indicators",
        chartExplain: "transaction volume in the last 7 days",
        chartTransactions: "transactions",
        blockHash: "block hash",
        createTime: "create time"
    },
    nodes: {
        nodeFront: "Node preposition",
        addFront: "Add front",
        frontId: "Front id",
        ip: "ip",
        frontPort: "Front port",
        agency: "agency",
        modifyTime: "modify time",
        nodeStyle: "node style",
        operation: "operation",
        sealer: "sealer",
        observer: "observer",
        remove: "remove",
        deleteNode: "delete node",
        nodeList: "Node list",
        nodeDescription: "Node management Description: node types can be set through node management. Including: 1. Set the corresponding node as a consensus node according to the node node ID. 2. Set the corresponding node as the observation node according to the node nodeid. 3. Set the corresponding node as free node according to node nodeid.",
        updateNodesType: "Update nodes type",
        frontConfig: "Front configure",
        addFrontSuccessMsg: "Add front success",
        addFrontErrMsg: "add front fail",
        admin: "admin",
        observerText: "Set as observer node, node will not sealer",
        removeText: "Set as remote node, node will not sealer and synchronization",
        sealerText: "Set as sealer node, node will  sealer.Please contact professional settings"
    },
    contracts: {
        createFile: "Create file",
        createFolder: "Create folder",
        upLoadFile: "Upload file",
        contractTips: "All contracts deployed within the group need to be added in contract management, compiled and saved, otherwise it will be judged as abnormal contracts.",
        rename: "rename",
        contractCompileSuccess: "Contract compiled successfully!",
        contractCompileFail: "Contract compilation failed!",
        renameFail: "Deployed contract cannot be renamed!",
        nameFail: "The same contract exists in the same directory. Please rename it!",
        contractLong: "Please enter numbers or letters, 1 to 32 digits in length!",
        contractSize: "The file size is more than 400k, please upload a file less than 400k!",
        contractType: "Please upload a file in. Sol format!",
        contractNameSameFail: "Contract with the same name cannot exist in the same directory!",
        contractSaveSuccess: "Contract saved successfully!",
        contractDeleteFail: "There are deployed contracts in the folder, unable to delete the folder!",
        contractSaveTips: "Press Ctrl + s to save the contract content",
        contractOpenTips: "Please click on the left panel to open a contract or create a new contract",
        sendTransaction: "Sending transaction",
        changeUser: "Select user",
        compileSuccess: "< Compile successfully！",
        conmileNameError: "Contract name and file name should be consistent!",
        deploySuccess: "< Deployment success！",
        contractDeploySuccess: "Contract deployed successfully！",
        contractName: "contract name",
        filePath: "file path",
        folderName: "folder name",
        folderSameFail: "The new folder has the same name as the existing folder",
        user: "user",
        params: "params",
        paramsInfo: "If the parameter type is an array, separate it with commas, without quotation marks, for example: arry1, arry2. Other types, such as string, do not need to be quoted.",
        contractAddress: "contract address",
        method: "method",
        contractAddressInput: "Please enter the contract address",
        contractAddressInfo: "Optional item,import deployed contract addresses.",
        selectUser: "Please select users",
        methodType: "Method type",
        methodName: "Method name",
        contractCatalogue: "Contract Catalogue",
        copyContractAddress: "Copy contract address",
        contractAbi: "contract abi",
        contractBin: "contract bin",
        copyContractAbi: "Copy contract abi",
        copyContractBin: "Copy contract bin",
        abiInfo: "ABI details",
        contractVersion: "Contract Version",
        adminUser: 'Administrator account',
        createTable: "Create table",
        insertTable: "Insert table record",
        searchTable: "Query table record",
        updateTable: "Update table record",
        deleteTable: "Delete table record",
        tableDetail: "Display table details"
    },
    privateKey: {
        addUser: "Add users",
        addUserTips: "The account number of the transaction sent in the group needs to be added to the private key management, otherwise it will be judged as an abnormal user.",
        searchUser: "Please enter user name or public key address",
        copyPublicKey: "Duplicate public key",
        privateKey: "Private key",
        publicKey: "Public key",
        createUser: "Create user",
        userName: "User name",
        userId: "User id",
        description: "User description",
        userAddress: "User public key address",
        userStatus: "User status",
        inputDescription: "Please enter user description",
        updateUserSuccess: "User modified successfully",
        normal: "normal",
        disable: "disable",
        privateKeyUser: "Private key user",
        publicKeyUser: "Public key user",
        publicKeyInfo: "Public key information",
        inputUserName: "Please enter user name",
        inputPublicInfo: "Please enter public key information or public key address.",
        userLong: "Within 120 characters",
        inputPublic: "Please enter public key information",
        addUserSuccess: "User added successfully!",
        addUserFail: "Failed to add user!"
    },
    system: {
        chainManager: "Chain management permission",
        addChainManager: "Add chain management permission",
        copyAddress: "Copy address",
        commonManager: "General management permission",
        chainAdministrator: "Chain Administrator",
        submit: "submit",
        tableName: "table Name",
        userAddress: "Account address",
        userName: "Account name",
        deployAndCreate: "System and table building permission",
        cns: "CNS permission",
        sysConfig: "System configuration permission",
        node: "Node permissions",
        confirmPermission: "When adding the first administrator permission, the administrator will start the permission. Please confirm whether the account is correct. Misoperation may cause the service to be unavailable.",
        dialogTips: "Tips: public key users cannot authorize other users",
        outUserAddress: "Address of external account",
        inputUser: "Please enter your account number",
        authorizedSuccess: "Authorized success",
        deleteSuccess: "Delete successful",
        configContent1: "It is not recommended to modify tx_count_limit and tx_gas_limit arbitrarily. These parameters can be modified as follows.",
        configContent2: "Limited hardware performance such as machine network or CPU: reduce tx_count_limit, or reduce business pressure.",
        configContent3: "The business logic is too complicated. When the block is executed, there is not enough gas: increase the tx_gas_limit.",
        updateConfig: "Modify configuration values",
        configKey: "Configuration name",
        configValue: "Configuration value",
        gasLimit: "One transaction maximum gas limit",
        countLimit: "The maximum number of transactions that can be packaged in one block",
        gasLong: "Range from 100000 to 2147483647",
        addCertificate: "Import certificate",
        export: "export",
        certName: "Certificate name",
        certType: "Certificate type",
        fingerPrint: "fingerprint",
        father: "Parent fingerprint",
        address: "address",
        validityFrom: "Validity period",
        fileSize: "The upload file size cannot exceed 100kb!",
        importSuccess: "Successfully imported",
        uploadWarning1: "The current limit selects 10 files. This time I selected",
        uploadWarning2: "files and selected",
        uploadWarning3: "files.",
        to: "to"
    },
    account: {
        addAccount: "Add account",
        user: "account",
        roleNameZh: "Character",
        createAccount: "Create account",
        deleteAccount: "Delete account",
        updataAccount: "Modify account"
    },
    transaction: {
        time: "duration",
        interface: "interface",
        week: "Last week",
        month: "Last month",
        threeMonth: "Last three months",
        regulatoryUser: "Failed to get supervised user list!",
        total: "Current total quantity",
        stroke: "stroke",
        unusualTips: "Too many exceptions (greater than or equal to 20) will stop the audit. It is recommended to check the transaction status, find out the cause of the abnormality and import the contract or user to clean up the abnormal record.",
        transactionTime: "Latest transaction hours",
        hash: "hash",
        inputUser: "Please enter user",
        startTime: "Start date",
        endTime: "End date",
        unusualMoreTips: "There are too many exceptions and the audit has been stopped. It is recommended to check the transaction status, find out the cause of the abnormality and import the contract or user to clean up the abnormal record.",
        transactionHash: "Transaction hash",
        transactionSearchFail: "Search transaction hash does not support fuzzy query.",
        toNull: "The deployment contract, the to field is empty.",
        unresolved: "Unresolved",
        reduction: "reduction",
        searchTransactionFail: "Unable to query transaction information",
        decode: "decode"
    },
    monitor: {
        node: "node",
        showDate: "Show date",
        contrastDate: "Contrast date",
        selectDate: "Select date",
        startEndTime: "Start and end time",
        timeRange: "Select time range",
        dataGranularity: "Data granularity",
        minute: "minute",
        second: "second",
        confirm: "confirm",
        addFrontInfo: "Add front information",
        blockHeight: "Block height",
        pendingCount: "Number of transactions to be packaged",
        dateFormat: "dd-MM-yyyy",
        dateLabel: "dd-MM-yyyy",
        startTime: "Start time",
        endTime: "End Time",
        utilizationRate: "Utilization rate",
        RAM: "RAM",
        hardDisk: "Hard Disk",
        txbps: "Upstream",
        rxbps: "Downstream",
        bandwidth: "Bandwidth",
        contrastDateData: "Contrast daily data",
        noData: "No data collected or data is 0",
        showDateData: "Display date data",
        nullData: "No data obtained",
        hostInfo: "Host information",
        nodeInfo: "Node information",
        selectDate: "Please select display date and time"
    }
}